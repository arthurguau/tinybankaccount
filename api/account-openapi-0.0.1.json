{
	"openapi": "3.0.1",
	"info": {
		"title": "Account Management Domain Service",
		"description": "An API showcase demonstrating how to automatically generate an openapi spec and client based on this.",
		"contact": {
			"name": "Platform Architecture Team",
			"email": "platform@ing.com.au"
		},
		"version": "0.0.1"
	},
	"servers": [
		{
			"url": "http://localhost:8084/accountmanagement/",
			"description": "Generated server url"
		}
	],
	"tags": [
		{
			"name": "Account-Domain",
			"description": "provider account management service"
		}
	],
	"paths": {
		"/api/v1/accounts/{id}": {
			"get": {
				"tags": [
					"Account-Domain"
				],
				"operationId": "getAccountByNumber",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json;charset=UTF-8": {
								"schema": {
									"$ref": "#/components/schemas/AccountDTO"
								}
							}
						}
					}
				}
			},
			"put": {
				"tags": [
					"Account-Domain"
				],
				"operationId": "updateAccount",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					}
				],
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/Account"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json;charset=UTF-8": {
								"schema": {
									"$ref": "#/components/schemas/AccountDTO"
								}
							}
						}
					}
				}
			},
			"delete": {
				"tags": [
					"Account-Domain"
				],
				"operationId": "deleteAccount",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "integer",
							"format": "int64"
						}
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json;charset=UTF-8": {
								"schema": {
									"type": "string",
									"enum": [
										"100 CONTINUE",
										"101 SWITCHING_PROTOCOLS",
										"102 PROCESSING",
										"103 CHECKPOINT",
										"200 OK",
										"201 CREATED",
										"202 ACCEPTED",
										"203 NON_AUTHORITATIVE_INFORMATION",
										"204 NO_CONTENT",
										"205 RESET_CONTENT",
										"206 PARTIAL_CONTENT",
										"207 MULTI_STATUS",
										"208 ALREADY_REPORTED",
										"226 IM_USED",
										"300 MULTIPLE_CHOICES",
										"301 MOVED_PERMANENTLY",
										"302 FOUND",
										"302 MOVED_TEMPORARILY",
										"303 SEE_OTHER",
										"304 NOT_MODIFIED",
										"305 USE_PROXY",
										"307 TEMPORARY_REDIRECT",
										"308 PERMANENT_REDIRECT",
										"400 BAD_REQUEST",
										"401 UNAUTHORIZED",
										"402 PAYMENT_REQUIRED",
										"403 FORBIDDEN",
										"404 NOT_FOUND",
										"405 METHOD_NOT_ALLOWED",
										"406 NOT_ACCEPTABLE",
										"407 PROXY_AUTHENTICATION_REQUIRED",
										"408 REQUEST_TIMEOUT",
										"409 CONFLICT",
										"410 GONE",
										"411 LENGTH_REQUIRED",
										"412 PRECONDITION_FAILED",
										"413 PAYLOAD_TOO_LARGE",
										"413 REQUEST_ENTITY_TOO_LARGE",
										"414 URI_TOO_LONG",
										"414 REQUEST_URI_TOO_LONG",
										"415 UNSUPPORTED_MEDIA_TYPE",
										"416 REQUESTED_RANGE_NOT_SATISFIABLE",
										"417 EXPECTATION_FAILED",
										"418 I_AM_A_TEAPOT",
										"419 INSUFFICIENT_SPACE_ON_RESOURCE",
										"420 METHOD_FAILURE",
										"421 DESTINATION_LOCKED",
										"422 UNPROCESSABLE_ENTITY",
										"423 LOCKED",
										"424 FAILED_DEPENDENCY",
										"425 TOO_EARLY",
										"426 UPGRADE_REQUIRED",
										"428 PRECONDITION_REQUIRED",
										"429 TOO_MANY_REQUESTS",
										"431 REQUEST_HEADER_FIELDS_TOO_LARGE",
										"451 UNAVAILABLE_FOR_LEGAL_REASONS",
										"500 INTERNAL_SERVER_ERROR",
										"501 NOT_IMPLEMENTED",
										"502 BAD_GATEWAY",
										"503 SERVICE_UNAVAILABLE",
										"504 GATEWAY_TIMEOUT",
										"505 HTTP_VERSION_NOT_SUPPORTED",
										"506 VARIANT_ALSO_NEGOTIATES",
										"507 INSUFFICIENT_STORAGE",
										"508 LOOP_DETECTED",
										"509 BANDWIDTH_LIMIT_EXCEEDED",
										"510 NOT_EXTENDED",
										"511 NETWORK_AUTHENTICATION_REQUIRED"
									]
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/accounts/": {
			"get": {
				"tags": [
					"Account-Domain"
				],
				"operationId": "getAccounts",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json;charset=UTF-8": {
								"schema": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/AccountNumber"
									}
								}
							}
						}
					}
				}
			},
			"post": {
				"tags": [
					"Account-Domain"
				],
				"operationId": "createAccount",
				"requestBody": {
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/AccountDTO"
							}
						}
					},
					"required": true
				},
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json;charset=UTF-8": {
								"schema": {
									"type": "integer",
									"format": "int64"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/accounts/readiness/refuse": {
			"get": {
				"tags": [
					"Account-Domain"
				],
				"operationId": "markReadinesRefusingTraffic",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json;charset=UTF-8": {
								"schema": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/accounts/readiness/accepting": {
			"get": {
				"tags": [
					"Account-Domain"
				],
				"operationId": "markReadinesAcceptingTraffic",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json;charset=UTF-8": {
								"schema": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/accounts/liveness/correct": {
			"get": {
				"tags": [
					"Account-Domain"
				],
				"operationId": "markLivenessCorrect",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json;charset=UTF-8": {
								"schema": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/accounts/liveness/broken": {
			"get": {
				"tags": [
					"Account-Domain"
				],
				"operationId": "markLivenessBroken",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json;charset=UTF-8": {
								"schema": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/accounts/i-will-sleep-for-30sec": {
			"get": {
				"tags": [
					"Account-Domain"
				],
				"operationId": "destroy",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json;charset=UTF-8": {
								"schema": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"/api/v1/accounts/complete-normally": {
			"get": {
				"tags": [
					"Account-Domain"
				],
				"operationId": "completeNormally",
				"responses": {
					"200": {
						"description": "OK",
						"content": {
							"application/json;charset=UTF-8": {
								"schema": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		}
	},
	"components": {
		"schemas": {
			"Account": {
				"required": [
					"alias"
				],
				"type": "object",
				"properties": {
					"accountNo": {
						"type": "integer",
						"format": "int64"
					},
					"customerId": {
						"type": "integer",
						"format": "int64"
					},
					"alias": {
						"type": "string"
					},
					"balance": {
						"type": "number"
					},
					"active": {
						"type": "string"
					}
				}
			},
			"AccountDTO": {
				"type": "object",
				"properties": {
					"accountNo": {
						"type": "integer",
						"format": "int64"
					},
					"customerId": {
						"type": "integer",
						"format": "int64"
					},
					"alias": {
						"type": "string"
					},
					"balance": {
						"type": "number"
					},
					"active": {
						"type": "string"
					}
				}
			},
			"AccountNumber": {
				"type": "object",
				"properties": {
					"id": {
						"type": "integer",
						"format": "int64"
					}
				}
			}
		}
	}
}
